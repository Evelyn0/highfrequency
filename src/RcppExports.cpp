// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calculate_g
NumericVector calculate_g(double omega, double alpha, double beta, double gamma, NumericVector returns, double g0);
RcppExport SEXP _highfrequency_calculate_g(SEXP omegaSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP returnsSEXP, SEXP g0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type returns(returnsSEXP);
    Rcpp::traits::input_parameter< double >::type g0(g0SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_g(omega, alpha, beta, gamma, returns, g0));
    return rcpp_result_gen;
END_RCPP
}
// nsmaller
int nsmaller(NumericVector times, NumericVector lengths, int start, int end, int max);
RcppExport SEXP _highfrequency_nsmaller(SEXP timesSEXP, SEXP lengthsSEXP, SEXP startSEXP, SEXP endSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lengths(lengthsSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(nsmaller(times, lengths, start, end, max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_highfrequency_calculate_g", (DL_FUNC) &_highfrequency_calculate_g, 6},
    {"_highfrequency_nsmaller", (DL_FUNC) &_highfrequency_nsmaller, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_highfrequency(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
